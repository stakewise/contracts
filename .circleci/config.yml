version: 2.1

executors:
  default:
    docker:
      - image: circleci/node:14
    working_directory: /tmp/workspace

jobs:
  dependencies:
    executor: default
    steps:
      - checkout
      - restore_cache:
          name: Restore package cache
          key: yarn-deps-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: |
            if [ ! -d /tmp/workspace/node_modules ]; then
              yarn install --frozen-lockfile
            fi
      - save_cache:
          name: Save package cache
          paths:
            - /tmp/workspace/node_modules
          key: yarn-deps-{{ checksum "yarn.lock" }}
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - node_modules

  compile:
    executor: default
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Compile
          command: yarn compile
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - artifacts
            - cache

  lint:
    executor: default
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Lint
          command: yarn lint

  test:
    executor: default
    resource_class: large
    parallelism: 16
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Run tests
          command: |
            circleci tests glob 'test/**/*.test.js' |
            circleci tests split |
            xargs yarn test:gas
      - run:
          name: Save gas report
          command: |
            mv gasReporterOutput.json /tmp/workspace/gasReporterOutput-$CIRCLE_NODE_INDEX.json
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - gasReporterOutput-*.json

  report-gas:
    executor: default
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Report gas changes
          command: |
            npx hardhat gas-reporter:merge /tmp/workspace/gasReporterOutput-*.json
            npx codechecks
      - store_artifacts:
          path: gasReporterOutput.json
      - run:
          name: Process test report
          when: always
          command: |
            # Convert absolute paths to relative to support splitting tests by timing
            if [ -e /tmp/workspace/log/test-results/mocha/test-results.xml ]; then
              sed -i "s|`pwd`/||g" /tmp/workspace/log/test-results/mocha/test-results.xml
            fi

  coverage:
    executor: default
    resource_class: large
    parallelism: 16
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Run coverage tests
          command: |
            circleci tests glob 'test/**/*.test.js' |
            circleci tests split |
            xargs -I {} yarn coverage --testfiles "{}"
      - run:
          name: Upload coverage
          command: |
            bash <(curl -s https://codecov.io/bash)

workflows:
  version: 2
  all:
    jobs:
      - dependencies
      - compile:
          requires:
            - dependencies
      - lint:
          requires:
            - compile
      - test:
          requires:
            - compile
      - report-gas:
          requires:
            - test
      - coverage:
          requires:
            - compile
