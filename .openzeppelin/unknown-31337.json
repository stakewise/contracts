{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x4A09D1f7abB11b6e29c5b1cA639d092F687c3827",
    "txHash": "0xd2df25e396c492cb17be180105086837cbab798dbc0dc7300a104eb067ef24dd",
    "deployTransaction": {
      "hash": "0xd2df25e396c492cb17be180105086837cbab798dbc0dc7300a104eb067ef24dd",
      "type": 2,
      "accessList": [],
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x9e42Ad694d5C4c5510217c657C992FEAA9b3C382",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x03c68832bd"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x77359400"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x03c68832bd"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 3,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xd7d428d8d97b630a52ddb3b496f9bc1ffe195818b4abf04559bfc3c8db419f05",
      "s": "0x6898ece768bff6b43e84e92dc491d21876f4c5d3c94eb8e8365719b499562f6a",
      "v": 0,
      "creates": "0x4A09D1f7abB11b6e29c5b1cA639d092F687c3827",
      "chainId": 1
    }
  },
  "proxies": [
    {
      "address": "0x57a9cbED053f37EB67d6f5932b1F2f9Afbe347F3",
      "txHash": "0xeae4ca759f10b6584b16bfacfca3d58d9c6532aab28cc797011871e9fd1f3a1a",
      "kind": "transparent"
    },
    {
      "address": "0xFe5947f029308F854db0cDA57e68C43f6C21a207",
      "txHash": "0x6a15bb06782d9ed30603c56c2464ddb8f2046289243d10ab7091fe41ce4f39fe",
      "kind": "transparent"
    },
    {
      "address": "0xeA6b7151b138c274eD8d4D61328352545eF2D4b7",
      "txHash": "0xcf553ddf554b6ef4632fd17661675d92f459942d68ac3c883f292a642ef42697",
      "kind": "transparent"
    },
    {
      "address": "0x270Ad793b7BB315A9fd07F1FFFd8AB1e3621dF7E",
      "txHash": "0x079d446644a165d838c00d65922de91614fbdc957331e7ec84c3b2ef8225bed7",
      "kind": "transparent"
    },
    {
      "address": "0xCBE26dbC91B05C160050167107154780F36CeAAB",
      "txHash": "0x21ae95ec6730603c90f2f529b1f7013a58a0d240101e52ad4f90d04e4fb85719",
      "kind": "transparent"
    },
    {
      "address": "0x65077fA7Df8e38e135bd4052ac243F603729892d",
      "txHash": "0xf06ddd1b63399d278d842de41715914ce8c876a5f47939a61f6fbfa3e285f18f",
      "kind": "transparent"
    },
    {
      "address": "0x07E8291591eaC73Dd93b079e3E68e171094bA9e1",
      "txHash": "0x3c15dc8bd9adec5cc7ad25003dd1a2441665b0342c00fe6b4ae88a63ad2166ed",
      "kind": "transparent"
    },
    {
      "address": "0x16c0020fC507C675eA8A3A817416adA3D95c661b",
      "txHash": "0xa7e0374d0a0a6960d38a55fe6f46bc2b3245f59f814db19662046d277ad8b4d1",
      "kind": "transparent"
    }
  ],
  "impls": {
    "e93725eae2d9caa61f1a3b2dfa72c12555354537f21c4421a5d724b14b706ee3": {
      "address": "0x35090bb49EC4B336aA3cd23410c4f60Ed4F7eDf2",
      "txHash": "0x57fbefec72cc6768f19641e467a5db879e98cb38c3484d6c949848e77214208a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WhiteListManager",
            "label": "whitelistedAccounts",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/WhiteListManager.sol:19"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2017_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2017_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1752_storage"
              }
            ]
          },
          "t_struct(Set)1752_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c16e4b952994fa08e80e4e9254ad6dc7b05d9eb6dc641438f4281b10e5e5ad70": {
      "address": "0x246568d4e637f90321CDE83600582f6f7204a2aC",
      "txHash": "0x0c12d280c0521ed26a8da117d85fa3e60d35566af503f886c6cbf236d694244a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2017_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2017_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1752_storage"
              }
            ]
          },
          "t_struct(Set)1752_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "80beb6db4f4f04df87b0c52113b2f3e8a7388c8901fa52e3a4d30163c37ecbf9": {
      "address": "0xea75a7efB541D0ed115a29F8Df827D9dFcD28c15",
      "txHash": "0x1bcf58a740e1c2c908d33b430ec6bca20a301351b0efa7245ee261deb01731d6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Pool",
            "label": "activatedValidators",
            "type": "t_uint256",
            "src": "contracts/pool/Pool.sol:26"
          },
          {
            "contract": "Pool",
            "label": "withdrawalCredentials",
            "type": "t_bytes32",
            "src": "contracts/pool/Pool.sol:29"
          },
          {
            "contract": "Pool",
            "label": "validatorRegistration",
            "type": "t_contract(IDepositContract)5055",
            "src": "contracts/pool/Pool.sol:32"
          },
          {
            "contract": "Pool",
            "label": "stakedEthToken",
            "type": "t_contract(IStakedEthToken)6084",
            "src": "contracts/pool/Pool.sol:35"
          },
          {
            "contract": "Pool",
            "label": "validators",
            "type": "t_contract(IPoolValidators)5807",
            "src": "contracts/pool/Pool.sol:38"
          },
          {
            "contract": "Pool",
            "label": "oracles",
            "type": "t_address",
            "src": "contracts/pool/Pool.sol:41"
          },
          {
            "contract": "Pool",
            "label": "whiteListManager",
            "type": "t_contract(IWhiteListManager)6147",
            "src": "contracts/pool/Pool.sol:44"
          },
          {
            "contract": "Pool",
            "label": "activations",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/pool/Pool.sol:47"
          },
          {
            "contract": "Pool",
            "label": "pendingValidators",
            "type": "t_uint256",
            "src": "contracts/pool/Pool.sol:50"
          },
          {
            "contract": "Pool",
            "label": "minActivatingDeposit",
            "type": "t_uint256",
            "src": "contracts/pool/Pool.sol:53"
          },
          {
            "contract": "Pool",
            "label": "pendingValidatorsLimit",
            "type": "t_uint256",
            "src": "contracts/pool/Pool.sol:56"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(IDepositContract)5055": {
            "label": "contract IDepositContract"
          },
          "t_contract(IStakedEthToken)6084": {
            "label": "contract IStakedEthToken"
          },
          "t_contract(IPoolValidators)5807": {
            "label": "contract IPoolValidators"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IWhiteListManager)6147": {
            "label": "contract IWhiteListManager"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2017_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2017_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1752_storage"
              }
            ]
          },
          "t_struct(Set)1752_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "514ff2914356e122ba52ceaf5c69fbda4b8a2d29845693660d73d5b3db8a5734": {
      "address": "0xed04369Cf09298050c92250aDed922fFDA9edc4E",
      "txHash": "0x5e0597e7bbc6f142f59a1ba5f94ed6fb9b0f92db31680178fa1668c2a569470e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PoolValidators",
            "label": "isValidatorRegistered",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/pool/PoolValidators.sol:24"
          },
          {
            "contract": "PoolValidators",
            "label": "operators",
            "type": "t_mapping(t_address,t_struct(Operator)5717_storage)",
            "src": "contracts/pool/PoolValidators.sol:27"
          },
          {
            "contract": "PoolValidators",
            "label": "pool",
            "type": "t_contract(IPool)5651",
            "src": "contracts/pool/PoolValidators.sol:30"
          },
          {
            "contract": "PoolValidators",
            "label": "oracles",
            "type": "t_address",
            "src": "contracts/pool/PoolValidators.sol:33"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Operator)5717_storage)": {
            "label": "mapping(address => struct IPoolValidators.Operator)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Operator)5717_storage": {
            "label": "struct IPoolValidators.Operator",
            "members": [
              {
                "label": "depositDataMerkleRoot",
                "type": "t_bytes32"
              },
              {
                "label": "committed",
                "type": "t_bool"
              }
            ]
          },
          "t_contract(IPool)5651": {
            "label": "contract IPool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2017_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2017_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1752_storage"
              }
            ]
          },
          "t_struct(Set)1752_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "56dc77614a52b69454fecebeed1a4474495cd4359aa684d8ec5f2830338fc6f0": {
      "address": "0xDBeB6bE4fCDa92022bF8613342F58B9368741c54",
      "txHash": "0xdb70eb1502ae1663a941b26b743beff9286ecb9238473174c0e89b8fd0b0d74f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/tokens/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/tokens/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/tokens/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "contracts/tokens/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/tokens/ERC20Upgradeable.sol:225"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)1701_storage)",
            "src": "contracts/tokens/ERC20PermitUpgradeable.sol:26"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "contracts/tokens/ERC20PermitUpgradeable.sol:29"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/tokens/ERC20PermitUpgradeable.sol:88"
          },
          {
            "contract": "RewardEthToken",
            "label": "stakedEthToken",
            "type": "t_contract(IStakedEthToken)6084",
            "src": "contracts/tokens/RewardEthToken.sol:26"
          },
          {
            "contract": "RewardEthToken",
            "label": "oracles",
            "type": "t_address",
            "src": "contracts/tokens/RewardEthToken.sol:29"
          },
          {
            "contract": "RewardEthToken",
            "label": "checkpoints",
            "type": "t_mapping(t_address,t_struct(Checkpoint)5818_storage)",
            "src": "contracts/tokens/RewardEthToken.sol:32"
          },
          {
            "contract": "RewardEthToken",
            "label": "protocolFeeRecipient",
            "type": "t_address",
            "src": "contracts/tokens/RewardEthToken.sol:35"
          },
          {
            "contract": "RewardEthToken",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "contracts/tokens/RewardEthToken.sol:38"
          },
          {
            "contract": "RewardEthToken",
            "label": "totalRewards",
            "type": "t_uint128",
            "src": "contracts/tokens/RewardEthToken.sol:41"
          },
          {
            "contract": "RewardEthToken",
            "label": "rewardPerToken",
            "type": "t_uint128",
            "src": "contracts/tokens/RewardEthToken.sol:44"
          },
          {
            "contract": "RewardEthToken",
            "label": "lastUpdateBlockNumber",
            "type": "t_uint256",
            "src": "contracts/tokens/RewardEthToken.sol:47"
          },
          {
            "contract": "RewardEthToken",
            "label": "merkleDistributor",
            "type": "t_address",
            "src": "contracts/tokens/RewardEthToken.sol:50"
          },
          {
            "contract": "RewardEthToken",
            "label": "rewardsDisabled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/tokens/RewardEthToken.sol:53"
          },
          {
            "contract": "RewardEthToken",
            "label": "whiteListManager",
            "type": "t_contract(IWhiteListManager)6147",
            "src": "contracts/tokens/RewardEthToken.sol:56"
          }
        ],
        "types": {
          "t_contract(IStakedEthToken)6084": {
            "label": "contract IStakedEthToken"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(Checkpoint)5818_storage)": {
            "label": "mapping(address => struct IRewardEthToken.Checkpoint)"
          },
          "t_struct(Checkpoint)5818_storage": {
            "label": "struct IRewardEthToken.Checkpoint",
            "members": [
              {
                "label": "reward",
                "type": "t_uint128"
              },
              {
                "label": "rewardPerToken",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IWhiteListManager)6147": {
            "label": "contract IWhiteListManager"
          },
          "t_mapping(t_address,t_struct(Counter)1701_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_struct(Counter)1701_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2017_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2017_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1752_storage"
              }
            ]
          },
          "t_struct(Set)1752_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          }
        }
      }
    },
    "399fc7184549b21c53bc4445e8806ca96e667980feedd6d01be3f6bafe4745b3": {
      "address": "0x353BFea1B119B4A8299F313E9643A9772AbCeC38",
      "txHash": "0xcede0025c2d49051d4d47853cb114e2d55e1a90ce4e73bcc735d4f0d7da4edac",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/tokens/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/tokens/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/tokens/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "contracts/tokens/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/tokens/ERC20Upgradeable.sol:225"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)1701_storage)",
            "src": "contracts/tokens/ERC20PermitUpgradeable.sol:26"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "contracts/tokens/ERC20PermitUpgradeable.sol:29"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/tokens/ERC20PermitUpgradeable.sol:88"
          },
          {
            "contract": "StakedEthToken",
            "label": "totalDeposits",
            "type": "t_uint256",
            "src": "contracts/tokens/StakedEthToken.sol:21"
          },
          {
            "contract": "StakedEthToken",
            "label": "deposits",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/tokens/StakedEthToken.sol:24"
          },
          {
            "contract": "StakedEthToken",
            "label": "pool",
            "type": "t_address",
            "src": "contracts/tokens/StakedEthToken.sol:27"
          },
          {
            "contract": "StakedEthToken",
            "label": "rewardEthToken",
            "type": "t_contract(IRewardEthToken)5975",
            "src": "contracts/tokens/StakedEthToken.sol:30"
          },
          {
            "contract": "StakedEthToken",
            "label": "distributorPrincipal",
            "type": "t_uint256",
            "src": "contracts/tokens/StakedEthToken.sol:33"
          },
          {
            "contract": "StakedEthToken",
            "label": "whiteListManager",
            "type": "t_contract(IWhiteListManager)6147",
            "src": "contracts/tokens/StakedEthToken.sol:36"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IRewardEthToken)5975": {
            "label": "contract IRewardEthToken"
          },
          "t_contract(IWhiteListManager)6147": {
            "label": "contract IWhiteListManager"
          },
          "t_mapping(t_address,t_struct(Counter)1701_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_struct(Counter)1701_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2017_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2017_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1752_storage"
              }
            ]
          },
          "t_struct(Set)1752_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c024c93cb72159cca10ae660ebbdef07a11abb9e67a23d539a61c27f3a72ccc2": {
      "address": "0xD24F252E92d0E2AC83d360Ec918D0a76Fd9B78Ee",
      "txHash": "0x7940ecced8fff3a8a1b6187365dbe1d867743e0a94467ccc34ec9de9bb74bb7f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "MerkleDistributor",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts/merkles/MerkleDistributor.sol:24"
          },
          {
            "contract": "MerkleDistributor",
            "label": "rewardEthToken",
            "type": "t_address",
            "src": "contracts/merkles/MerkleDistributor.sol:27"
          },
          {
            "contract": "MerkleDistributor",
            "label": "oracles",
            "type": "t_contract(IOracles)5358",
            "src": "contracts/merkles/MerkleDistributor.sol:30"
          },
          {
            "contract": "MerkleDistributor",
            "label": "lastUpdateBlockNumber",
            "type": "t_uint256",
            "src": "contracts/merkles/MerkleDistributor.sol:33"
          },
          {
            "contract": "MerkleDistributor",
            "label": "_claimedBitMap",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/merkles/MerkleDistributor.sol:36"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IOracles)5358": {
            "label": "contract IOracles"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2017_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2017_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1752_storage"
              }
            ]
          },
          "t_struct(Set)1752_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f0c5e4086810ed34e489744f00410d525f44a48a712d7067a2dd8d0814c7f211": {
      "address": "0xa533E254914849Ab79d78F30B78Ac3C660a97c3E",
      "txHash": "0x7dec1d8d1e37bc5f4be97ba26f6f53482ed51d58436e9566ed5901b03ea15546",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Oracles",
            "label": "rewardsNonce",
            "type": "t_struct(Counter)1701_storage",
            "src": "contracts/Oracles.sol:30"
          },
          {
            "contract": "Oracles",
            "label": "validatorsNonce",
            "type": "t_struct(Counter)1701_storage",
            "src": "contracts/Oracles.sol:33"
          },
          {
            "contract": "Oracles",
            "label": "rewardEthToken",
            "type": "t_contract(IRewardEthToken)5975",
            "src": "contracts/Oracles.sol:36"
          },
          {
            "contract": "Oracles",
            "label": "pool",
            "type": "t_contract(IPool)5651",
            "src": "contracts/Oracles.sol:39"
          },
          {
            "contract": "Oracles",
            "label": "poolValidators",
            "type": "t_contract(IPoolValidators)5807",
            "src": "contracts/Oracles.sol:42"
          },
          {
            "contract": "Oracles",
            "label": "merkleDistributor",
            "type": "t_contract(IMerkleDistributor)5216",
            "src": "contracts/Oracles.sol:45"
          }
        ],
        "types": {
          "t_struct(Counter)1701_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IRewardEthToken)5975": {
            "label": "contract IRewardEthToken"
          },
          "t_contract(IPool)5651": {
            "label": "contract IPool"
          },
          "t_contract(IPoolValidators)5807": {
            "label": "contract IPoolValidators"
          },
          "t_contract(IMerkleDistributor)5216": {
            "label": "contract IMerkleDistributor"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2017_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2017_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1752_storage"
              }
            ]
          },
          "t_struct(Set)1752_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
